#color
#scale_fill_manual(values=c("purple"))+
xlab("")+
ylab("RPM")+
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=12))+
#face="italic"
theme(axis.text.x = element_text(colour = "black", size=12))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=12))+
theme(legend.title = element_blank())
count_all=read.csv("small.RNA.csv",header=FALSE)
setwd("~/Dropbox/paper.satDNA.regulation/drafts/Github/Fig2-S1A:B")
count_all=read.csv("small.RNA.csv",header=FALSE)
summary(count_all)
#for 1.688
count=count_all[count_all$V1=='1.688',]
#get statistics summary
count_sum <- ddply(count, c("V2"), summarise,
N    = length(V3),
mean = mean(V3),
sd   = sd(V3),
se   = sd / sqrt(N) )
ggplot(count_sum, aes(factor(V2,levels=c("ovary","testis","head","whole body")), mean))+
geom_bar(stat="identity", position = "dodge", width=0.7, fill="light green", color="black") +
# , guide=FALSE
#error bars
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.2, size=0.3, position=position_dodge(.9))+
#color
#scale_fill_manual(values=c("purple"))+
xlab("")+
ylab("RPM")+
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=15))+
#face="italic"
theme(axis.text.x = element_text(colour = "black", size=15))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=15))+
theme(legend.title = element_blank())
#OR
#for Rsp
count=count_all[count_all$V1=='Rsp',]
#get statistics summary
count_sum <- ddply(count, c("V2"), summarise,
N    = length(V3),
mean = mean(V3),
sd   = sd(V3),
se   = sd / sqrt(N) )
ggplot(count_sum, aes(factor(V2,levels=c("ovary","testis","head","whole body")), mean))+
geom_bar(stat="identity", position = "dodge", width=0.7, fill="light green", color="black") +
# , guide=FALSE
#error bars
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.2, size=0.3, position=position_dodge(.9))+
#color
#scale_fill_manual(values=c("purple"))+
xlab("")+
ylab("RPM")+
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=15))+
#face="italic"
theme(axis.text.x = element_text(colour = "black", size=15))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=15))+
theme(legend.title = element_blank())
setwd("~/Dropbox/paper.satDNA.regulation/drafts/Github/Fig1-S2")
#depth
count_all=read.table("SRR1187952.260bp.depth",header=FALSE)
summary(count_all)
count <- count_all
count <- count[count$V2<431869 | count$V2>437016, ]
count <- count[count$V2<442185 | count$V2>447332, ]
count <- count[count$V2<459709 | count$V2>460136, ]
ggplot(count, aes(x=factor(V2), y=V3, color=V4))+
geom_bar(stat="identity", position = "identity", width=0.3)+
xlab("position (kb)")+
ylab("read depth")+
scale_y_continuous(breaks=c(-10,-5,0,5,10),limits=c(-10,10))+
#Rsp
scale_x_discrete(breaks=c("50000","100000","150000"), labels=c("50","100","150"))+
#260bp, limits=c(402701,460225)
#scale_x_discrete(breaks=c("410000","440000"), labels=c("410","440"))+
scale_color_manual(values=c("orange","blue"), guide=FALSE)+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.5,colour="black")+
theme(axis.text = element_text(colour = "black", size=5))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))
ggplot(count, aes(x=factor(V2), y=V3, color=V4))+
geom_bar(stat="identity", position = "identity", width=0.3)+
xlab("position (kb)")+
ylab("read depth")+
scale_y_continuous(breaks=c(-10,-5,0,5,10),limits=c(-10,10))+
#Rsp
#  scale_x_discrete(breaks=c("50000","100000","150000"), labels=c("50","100","150"))+
#OR
#260bp, limits=c(402701,460225)
scale_x_discrete(breaks=c("410000","440000"), labels=c("410","440"))+
scale_color_manual(values=c("orange","blue"), guide=FALSE)+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.5,colour="black")+
theme(axis.text = element_text(colour = "black", size=5))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))
geom_bar(stat="identity", position = "identity", width=0.3)+
xlab("position (kb)")+
ylab("read depth")+
#change based on data
#  scale_y_continuous(breaks=c(-10,-5,0,5,10),limits=c(-10,10))+
#Rsp
#  scale_x_discrete(breaks=c("50000","100000","150000"), labels=c("50","100","150"))+
#OR
#260bp, limits=c(402701,460225)
scale_x_discrete(breaks=c("410000","440000"), labels=c("410","440"))+
scale_color_manual(values=c("orange","blue"), guide=FALSE)+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.5,colour="black")+
theme(axis.text = element_text(colour = "black", size=5))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))
ggplot(count, aes(x=factor(V2), y=V3, color=V4))+
geom_bar(stat="identity", position = "identity", width=0.3)+
xlab("position (kb)")+
ylab("read depth")+
#change based on data
#  scale_y_continuous(breaks=c(-10,-5,0,5,10),limits=c(-10,10))+
#Rsp
#  scale_x_discrete(breaks=c("50000","100000","150000"), labels=c("50","100","150"))+
#OR
#260bp, limits=c(402701,460225)
scale_x_discrete(breaks=c("410000","440000"), labels=c("410","440"))+
scale_color_manual(values=c("orange","blue"), guide=FALSE)+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.5,colour="black")+
theme(axis.text = element_text(colour = "black", size=5))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))
count_all=read.csv("stranded_count.csv",header=TRUE)
summary(count_all)
#count <- count_all[count_all$type=="minus_all" | count_all$type=="plus_all", ]
#OR
count <- count_all[count_all$type=="minus_unique" | count_all$type=="plus_unique", ]
#get statistics summary including standard error
count_sum <- ddply(count, c("repeat.","type"), summarise,
N    = length(ratio),
mean = mean(ratio),
sd   = sd(ratio),
se   = sd / sqrt(N) )
#get statistics summary
count_sum <- ddply(count, c("repeat.","type"), summarise,
N    = length(ratio),
mean = mean(ratio),
sd   = sd(ratio),
se   = sd / sqrt(N) )
summary(count_sum)
ggplot(count_sum, aes(x=factor(type,levels=c("plus_all","minus_all","plus_unique","minus_unique")), y=mean, fill=factor(repeat.,levels=c("Rsp","1.688"))))+
geom_bar(stat="identity", position = "dodge", width=0.8)+
xlab("")+
ylab("% of reads")+
scale_fill_manual(values=c("red2","gold2"))+
#error bars
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.3, size=0.3, position=position_dodge(.8))+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="dark grey")+
theme(axis.text.y = element_text(colour = "black", size=10))+
#face="italic"
theme(axis.text.x = element_text(colour = "black", size=10))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=10))+
theme(legend.title = element_blank())
count <- count_all[count_all$type=="minus_all" | count_all$type=="plus_all", ]
#get statistics summary
count_sum <- ddply(count, c("repeat.","type"), summarise,
N    = length(ratio),
mean = mean(ratio),
sd   = sd(ratio),
se   = sd / sqrt(N) )
ggplot(count_sum, aes(x=factor(type,levels=c("plus_all","minus_all","plus_unique","minus_unique")), y=mean, fill=factor(repeat.,levels=c("Rsp","1.688"))))+
geom_bar(stat="identity", position = "dodge", width=0.8)+
xlab("")+
ylab("% of reads")+
scale_fill_manual(values=c("red2","gold2"))+
#error bars
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.3, size=0.3, position=position_dodge(.8))+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="dark grey")+
theme(axis.text.y = element_text(colour = "black", size=10))+
#face="italic"
theme(axis.text.x = element_text(colour = "black", size=10))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=10))+
theme(legend.title = element_blank())
library(ggplot2)
library(ggseqlogo)
library(dplyr)
setwd("~/Dropbox/paper.satDNA.regulation/drafts/Github/Fig2-S1")
reads=read.table("ovary_1.688_24nt.txt",header=FALSE)
reads_vector <- as.vector(reads$V1)
ggplot()+
geom_logo(data=reads_vector, seq_type="rna")+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=6))+
theme(axis.text.x = element_text(colour = "black", size=6))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.3))+
theme(axis.title = element_text(size=10))+
theme(legend.title = element_blank())
library(ggseqlogo)
install.packages("ggseqlogo")
ggplot()+
geom_logo(data=reads_vector, seq_type="rna")+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=6))+
theme(axis.text.x = element_text(colour = "black", size=6))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.3))+
theme(axis.title = element_text(size=10))+
theme(legend.title = element_blank())
library(ggseqlogo)
ggplot()+
geom_logo(data=reads_vector, seq_type="rna")+
theme(panel.background = element_rect(colour = "white", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=6))+
theme(axis.text.x = element_text(colour = "black", size=6))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.3))+
theme(axis.title = element_text(size=10))+
theme(legend.title = element_blank())
setwd("~/Dropbox/paper.satDNA.regulation/drafts/Github/Fig2-S2")
count=read.table("dmel_scaffold2_plus0310_Rsp_vs_monomer.distrib",header=TRUE)
repeatID="Rsp"
count$condition <- "genomic"
summary(count)
repeatID="Rsp"
control_rep1 <- read.table(paste("SRR5445299",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
control_rep1$condition <- "control_rep1"
control_rep2 <- read.table(paste("SRR1187947",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
control_rep2$condition <- "control_rep2"
treatment_rep1 <- read.table(paste("SRR5803096",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep1$condition <- "treatment_rep1"
treatment_rep2 <- read.table(paste("SRR060645",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep2$condition <- "treatment_rep2"
treatment_rep3 <- read.table(paste("SRR2046463",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep3$condition <- "treatment_rep3"
treatment_rep4 <- read.table(paste("Iso1_R1",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep4$condition <- "treatment_rep4"
#combine
#, treatment_rep3
count <- bind_rows(control_rep1, control_rep2, treatment_rep1, treatment_rep2, treatment_rep3, treatment_rep4)
#format condition
count$condition <- factor(count$condition,
levels=c("control_rep1", "control_rep2", "treatment_rep1", "treatment_rep2", "treatment_rep3", "treatment_rep4"),
labels=c("ovary-1", "ovary-2", "ovary-3", "testis-1", "testis-2", "testis-3"))
summary(count)
count <- count[count$condition=="testis-1" | count$condition=="testis-2" | count$condition=="testis-3",]
ggplot(count, aes(position, total_count, color=condition))+
geom_line() +
#color
#"orange", "violet", "red",
scale_color_manual(values=c("black","green","#56B4E9","blue"))+
xlab(repeatID)+
ylab("%reads pile up")+
#  ylim(0,300) +
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=8))+
theme(axis.text.x = element_text(colour = "black", size=8))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))+
theme(legend.title = element_blank())
repeatID="Rsp"
treatment_rep1 <- read.table(paste("SRR5445299",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep1$condition <- "treatment_rep1"
treatment_rep2 <- read.table(paste("SRR1187947",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep2$condition <- "treatment_rep2"
treatment_rep1 <- read.table(paste("SRR5803096",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep1$condition <- "treatment_rep1"
treatment_rep2 <- read.table(paste("SRR060645",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep2$condition <- "treatment_rep2"
treatment_rep3 <- read.table(paste("SRR2046463",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep3$condition <- "treatment_rep3"
treatment_rep4 <- read.table(paste("Iso1_R1",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
treatment_rep4$condition <- "treatment_rep4"
#combine
count <- bind_rows(treatment_rep1, treatment_rep2, treatment_rep1, treatment_rep2, treatment_rep3, treatment_rep4)
#format condition
count$condition <- factor(count$condition,
levels=c("treatment_rep1", "treatment_rep2", "treatment_rep1", "treatment_rep2", "treatment_rep3", "treatment_rep4"),
labels=c("ovary-1", "ovary-2", "ovary-3", "testis-1", "testis-2", "testis-3"))
summary(count)
count <- count[count$condition=="testis-1" | count$condition=="testis-2" | count$condition=="testis-3",]
#count <- count[count$condition=="ovary-1" | count$condition=="ovary-2" | count$condition=="ovary-3",]
ggplot(count, aes(position, total_count, color=condition))+
geom_line() +
#color
#"black"
#"orange", "violet", "red",
scale_color_manual(values=c("green","#56B4E9","blue"))+
xlab(repeatID)+
ylab("%reads pile up")+
#  ylim(0,300) +
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=8))+
theme(axis.text.x = element_text(colour = "black", size=8))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))+
theme(legend.title = element_blank())
repeatID="Rsp"
rep1 <- read.table(paste("SRR5445299",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
rep1$condition <- "rep1"
rep2 <- read.table(paste("SRR1187947",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
rep2$condition <- "rep2"
rep3 <- read.table(paste("SRR5803096",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
rep3$condition <- "rep3"
rep4 <- read.table(paste("SRR060645",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
rep4$condition <- "rep4"
rep5 <- read.table(paste("SRR2046463",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
rep5$condition <- "rep5"
rep6 <- read.table(paste("Iso1_R1",repeatID,"vs_monomer.distrib", sep="_"), header=TRUE)
rep6$condition <- "rep6"
#combine
count <- bind_rows(rep1, rep2, rep3, rep4, rep5, rep6)
#format condition
count$condition <- factor(count$condition,
levels=c("rep1", "rep2", "rep3", "rep4", "rep5", "rep6"),
labels=c("ovary-1", "ovary-2", "ovary-3", "testis-1", "testis-2", "testis-3"))
count <- count[count$condition=="testis-1" | count$condition=="testis-2" | count$condition=="testis-3",]
ggplot(count, aes(position, total_count, color=condition))+
geom_line() +
#color
#"black"
#"orange", "violet", "red",
scale_color_manual(values=c("green","#56B4E9","blue"))+
xlab(repeatID)+
ylab("%reads pile up")+
#  ylim(0,300) +
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=8))+
theme(axis.text.x = element_text(colour = "black", size=8))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))+
theme(legend.title = element_blank())
count <- bind_rows(rep1, rep2, rep3, rep4, rep5, rep6)
#format condition
count$condition <- factor(count$condition,
levels=c("rep1", "rep2", "rep3", "rep4", "rep5", "rep6"),
labels=c("ovary-1", "ovary-2", "ovary-3", "testis-1", "testis-2", "testis-3"))
summary(count)
#OR
count <- count[count$condition=="ovary-1" | count$condition=="ovary-2" | count$condition=="ovary-3",]
ggplot(count, aes(position, total_count, color=condition))+
geom_line() +
#color
#"black"
#"orange", "violet", "red",
scale_color_manual(values=c("green","#56B4E9","blue"))+
xlab(repeatID)+
ylab("%reads pile up")+
#  ylim(0,300) +
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=8))+
theme(axis.text.x = element_text(colour = "black", size=8))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))+
theme(legend.title = element_blank())
count=read.table("dmel_scaffold2_plus0310_Rsp_vs_monomer.distrib",header=TRUE)
repeatID="Rsp"
count$condition <- "genomic"
summary(count)
ggplot(count, aes(position, total_count, color=condition))+
geom_line() +
#color
#"black"
#"orange", "violet", "red",
scale_color_manual(values=c("black"))+
xlab(repeatID)+
ylab("%reads pile up")+
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=8))+
theme(axis.text.x = element_text(colour = "black", size=8))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))+
theme(legend.title = element_blank())
repeatID="Rsp"
suffix="perc.distrib"
treatment_rep1 <- read.table(paste("SRR5803102",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep1$condition <- "treatment_rep1"
treatment_rep2 <- read.table(paste("SRR5806896",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep2$condition <- "treatment_rep2"
treatment_rep3 <- read.table(paste("SRR1024325",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep3$condition <- "treatment_rep3"
treatment_rep4 <- read.table(paste("SRR1024307",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep4$condition <- "treatment_rep4"
#combine
count <- bind_rows(control_rep1, control_rep2, control_rep3, control_rep4, treatment_rep1, treatment_rep2, treatment_rep3, treatment_rep4)
#format condition
count$condition <- factor(count$condition,
levels=c("treatment_rep1", "treatment_rep2", "treatment_rep3", "treatment_rep4"),
labels=c("rhino_chip-1", "rhino_chip-2", "rhino_chip-3", "rhino_chip-4"))
summary(count)
repeatID="Rsp"
suffix="perc.distrib"
treatment_rep1 <- read.table(paste("SRR5803102",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep1$condition <- "treatment_rep1"
treatment_rep2 <- read.table(paste("SRR5806896",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep2$condition <- "treatment_rep2"
treatment_rep3 <- read.table(paste("SRR1024325",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep3$condition <- "treatment_rep3"
treatment_rep4 <- read.table(paste("SRR1024307",repeatID,"vs_monomer",suffix, sep="_"), header=TRUE)
treatment_rep4$condition <- "treatment_rep4"
#combine
count <- bind_rows(treatment_rep1, treatment_rep2, treatment_rep3, treatment_rep4)
#format condition
count$condition <- factor(count$condition,
levels=c("treatment_rep1", "treatment_rep2", "treatment_rep3", "treatment_rep4"),
labels=c("rhino_chip-1", "rhino_chip-2", "rhino_chip-3", "rhino_chip-4"))
count <- count[count$condition=="rhino_chip-1" | count$condition=="rhino_chip-2" | count$condition=="rhino_chip-3"| count$condition=="rhino_chip-4",]
ggplot(count, aes(position, total_count, color=condition))+
geom_line() +
#color
#"black"
#"burlywood1","burlywood2","burlywood3","burlywood4"
#"orange", "violet", "red",
scale_color_manual(values=c("green","#56B4E9","blue"))+
xlab(repeatID)+
ylab("%reads pile up")+
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=8))+
theme(axis.text.x = element_text(colour = "black", size=8))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))+
theme(legend.title = element_blank())
ggplot(count, aes(position, total_count, color=condition))+
geom_line() +
#color
#"black"
#"burlywood1","burlywood2","burlywood3","burlywood4"
#"orange", "violet", "red",
scale_color_manual(values=c("burlywood1","burlywood2","burlywood3","burlywood4","green","#56B4E9","blue"))+
xlab(repeatID)+
ylab("%reads pile up")+
theme(panel.background = element_rect(colour = "black", fill = "white"))+
theme(panel.grid.major = element_blank())+
theme(panel.grid.minor = element_blank())+
geom_hline(yintercept=0, size=0.25,colour="grey")+
theme(axis.text.y = element_text(colour = "black", size=8))+
theme(axis.text.x = element_text(colour = "black", size=8))+
theme(axis.ticks = element_line(colour = "black"))+
theme(axis.line = element_line(size=0.5))+
theme(axis.title = element_text(size=8))+
theme(legend.title = element_blank())
